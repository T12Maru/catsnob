// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: tracks.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createAlbumTracks = `-- name: CreateAlbumTracks :one
insert into tracks (id, created_at, updated_at, name, name_slug, duration, album_track_number, artist_id, album_id)
values (
	gen_random_uuid(),
	NOW(),
	NOW(),
	$1,
	$2,
	$3,
	$4,
	$5,
	$6
)
returning id, created_at, updated_at, name, name_slug, duration, album_track_number, artist_id, album_id
`

type CreateAlbumTracksParams struct {
	Name             string
	NameSlug         string
	Duration         int32
	AlbumTrackNumber int32
	ArtistID         uuid.UUID
	AlbumID          uuid.UUID
}

func (q *Queries) CreateAlbumTracks(ctx context.Context, arg CreateAlbumTracksParams) (Track, error) {
	row := q.db.QueryRowContext(ctx, createAlbumTracks,
		arg.Name,
		arg.NameSlug,
		arg.Duration,
		arg.AlbumTrackNumber,
		arg.ArtistID,
		arg.AlbumID,
	)
	var i Track
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.NameSlug,
		&i.Duration,
		&i.AlbumTrackNumber,
		&i.ArtistID,
		&i.AlbumID,
	)
	return i, err
}
